#include<msp430g2202.h>

char i;
unsigned char sekundes = 0;
unsigned char minutes = 0;
unsigned char sekundes = 0;
unsigned char mode = 0;
unsigned char submode = 0;

void display(unsigned char digit);
void delay(unsigned long ms);
void indication(unsigned char digit12, unsigned char digit34, unsigned char which_digit);
void time_engine(unsigned char);

int main(void)
{
 WDTCTL = WDTPW + WDTHOLD;
P2DIR &= ~0x30;
 P2IES |= 0x30;
 P2IFG &= ~0x30;
 P2IE |= 0x30;
__enable_interrupt();
 BCSCTL1 = CALBC1_12MHZ; //SET TIMER REQ TO 12MHZ
 DCOCTL = CALDCO_12MHZ; //-||-
 P1DIR |= 0xFF;
 P2DIR |= 0xF;
 P2OUT &= ~0xF;
 P2OUT |= 0x1;

 unsigned char j =0; //unsigned char veertiibas var buut no 0 lidz 255
 unsigned char digit_position = 0;
 for(unsigned int h = 0;;h++)
 {
  if(h==1000){
    h=0;
  time_engine(1); 
 
  } 
  digit_position = (digit_position+1)%4;
 // indikaacijas dala
if(mode == 0)
indication(minutes,sekundes,digit_position);
else if(mode == 1)
indication(stundas,minutes,digit_position);
// indikaacijas dalas beigas
  delay(100);
 }
}

void display(unsigned char digit)
{
  if(digit == 0) P1OUT = 0xF5;

  if(digit == 1) P1OUT = 0x05;

  if(digit == 2) P1OUT = 0x73;

  if(digit == 3) P1OUT = 0x57;

  if(digit == 4) P1OUT = 0x87;

  if(digit == 5) P1OUT = 0xD6;

  if(digit == 6) P1OUT = 0xF6;

  if(digit == 7) P1OUT = 0x45;
  
  if(digit == 8) P1OUT = 0xF7;

  if(digit == 9) P1OUT = 0xD7;
  
}

void delay(unsigned long ms)
{
  unsigned long ims;
  for(ims = 0; ims<ms;ims++)
  {
    __delay_cycles(120);
  }
}

void indication(unsigned char digit12, unsigned char digit34, unsigned char which_digit)
{
  P2OUT &= ~0xF;
  if(which_digit == 0) 
  {
    P2OUT = 0b1000;
    display(digit34%10);
  }
  
  if(which_digit == 1)
  {
    P2OUT = 0b100;
    display(digit34/10);
  }
  if(which_digit == 2)
  {
    P2OUT = 0b10;
    display(digit12%10);
  }
  if(which_digit == 3) 
  {
    P2OUT = 0b1;
    display(digit12/10);
  }
}

void time_engine(unsigned char time_instant_in_seconds){
	sekundes = sekundes + time_instant_in_seconds; 
	if (sekundes==60){
 	sekundes=0;minutes++;
	} 

}
#pragma vector = PORT2_VECTOR
__interrupt void P2_ISR(void)
{
if((P2IFG & BIT5) == BIT5)
 {
 P2IFG &= ~BIT5;
 mode++;
 if(mode==2) mode=0;
 //SW1 activities
 }
if((P2IFG & BIT4) == BIT4)
 {
 P2IFG &= ~BIT4;
 //SW2 activities
 }
}
